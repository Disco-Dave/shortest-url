Jun 19 20:03:07.073 TRACE mio::poll: registering event source with poller: token=Token(0), interests=READABLE | WRITABLE    
Jun 19 20:03:07.076 TRACE mio::poll: registering event source with poller: token=Token(1), interests=READABLE | WRITABLE    
Jun 19 20:03:58.215 TRACE mio::poll: registering event source with poller: token=Token(0), interests=READABLE | WRITABLE    
Jun 19 20:03:58.219 TRACE mio::poll: registering event source with poller: token=Token(1), interests=READABLE | WRITABLE    
Jun 19 20:03:58.219  INFO shortest_url: Now listening on: 127.0.0.1:8081
Jun 19 20:05:05.678 TRACE mio::poll: registering event source with poller: token=Token(2), interests=READABLE | WRITABLE    
Jun 19 20:05:05.678 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:05.679 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 238])
Jun 19 20:05:05.679 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(165)
Jun 19 20:05:05.679 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:05.679 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:05.679 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:05.680 DEBUG request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:05.680  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:05.680 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "health-check"
Jun 19 20:05:05.680 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:05.680 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:05.680 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:05.681  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=204
Jun 19 20:05:05.681 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=204, body=None, req_method=Some(GET)
Jun 19 20:05:05.681 TRACE encode_headers: hyper::proto::h1::role: server body forced to 0; method=Some(GET), status=204
Jun 19 20:05:05.681 DEBUG hyper::proto::h1::io: flushed 64 bytes
Jun 19 20:05:05.681 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:05.681 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:05.682 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:07.002 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:07.002 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 238])
Jun 19 20:05:07.003 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(165)
Jun 19 20:05:07.003 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:07.003 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:07.003 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:07.003 DEBUG request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:07.003  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:07.004 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "health-check"
Jun 19 20:05:07.004 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:07.004 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:07.004 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:07.004  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=204
Jun 19 20:05:07.005 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=204, body=None, req_method=Some(GET)
Jun 19 20:05:07.005 TRACE encode_headers: hyper::proto::h1::role: server body forced to 0; method=Some(GET), status=204
Jun 19 20:05:07.005 DEBUG hyper::proto::h1::io: flushed 64 bytes
Jun 19 20:05:07.005 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:07.005 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:07.005 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:07.261 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:07.262 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 238])
Jun 19 20:05:07.262 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(165)
Jun 19 20:05:07.262 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:07.262 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:07.262 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:07.263 DEBUG request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:07.263  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:07.263 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "health-check"
Jun 19 20:05:07.263 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:07.263 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:07.263 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:07.264  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=204
Jun 19 20:05:07.264 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=204, body=None, req_method=Some(GET)
Jun 19 20:05:07.264 TRACE encode_headers: hyper::proto::h1::role: server body forced to 0; method=Some(GET), status=204
Jun 19 20:05:07.264 DEBUG hyper::proto::h1::io: flushed 64 bytes
Jun 19 20:05:07.264 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:07.265 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:07.265 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:07.401 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:07.401 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 238])
Jun 19 20:05:07.402 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(165)
Jun 19 20:05:07.402 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:07.402 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:07.402 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:07.402 DEBUG request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:07.402  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:07.403 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "health-check"
Jun 19 20:05:07.403 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:07.403 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:07.403 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:07.403  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=204
Jun 19 20:05:07.404 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=204, body=None, req_method=Some(GET)
Jun 19 20:05:07.404 TRACE encode_headers: hyper::proto::h1::role: server body forced to 0; method=Some(GET), status=204
Jun 19 20:05:07.404 DEBUG hyper::proto::h1::io: flushed 64 bytes
Jun 19 20:05:07.404 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:07.404 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:07.404 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:07.614 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:07.614 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 238])
Jun 19 20:05:07.614 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(165)
Jun 19 20:05:07.614 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:07.615 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:07.615 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:07.615 DEBUG request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:07.615  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:07.615 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "health-check"
Jun 19 20:05:07.615 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:07.615 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:07.616 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:07.616  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=204
Jun 19 20:05:07.616 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=204, body=None, req_method=Some(GET)
Jun 19 20:05:07.616 TRACE encode_headers: hyper::proto::h1::role: server body forced to 0; method=Some(GET), status=204
Jun 19 20:05:07.616 DEBUG hyper::proto::h1::io: flushed 64 bytes
Jun 19 20:05:07.616 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:07.617 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:07.617 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:07.747 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:07.747 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 238])
Jun 19 20:05:07.747 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(165)
Jun 19 20:05:07.748 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:07.748 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:07.748 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:07.748 DEBUG request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:07.748  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:07.749 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "health-check"
Jun 19 20:05:07.749 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:07.749 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:07.749 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:07.749  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=204
Jun 19 20:05:07.749 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=204, body=None, req_method=Some(GET)
Jun 19 20:05:07.749 TRACE encode_headers: hyper::proto::h1::role: server body forced to 0; method=Some(GET), status=204
Jun 19 20:05:07.750 DEBUG hyper::proto::h1::io: flushed 64 bytes
Jun 19 20:05:07.750 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:07.750 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:07.750 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:07.937 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:07.937 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 238])
Jun 19 20:05:07.937 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(165)
Jun 19 20:05:07.937 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:07.938 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:07.938 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:07.938 DEBUG request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:07.938  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:07.938 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "health-check"
Jun 19 20:05:07.938 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:07.939 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:07.939 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:07.939  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=204
Jun 19 20:05:07.939 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=204, body=None, req_method=Some(GET)
Jun 19 20:05:07.939 TRACE encode_headers: hyper::proto::h1::role: server body forced to 0; method=Some(GET), status=204
Jun 19 20:05:07.940 DEBUG hyper::proto::h1::io: flushed 64 bytes
Jun 19 20:05:07.940 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:07.940 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:07.940 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:08.089 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:08.089 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 238])
Jun 19 20:05:08.089 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(165)
Jun 19 20:05:08.090 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:08.090 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:08.091 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:08.091 DEBUG request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:08.091  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:08.091 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "health-check"
Jun 19 20:05:08.092 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:08.092 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:08.092 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:08.092  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=204
Jun 19 20:05:08.092 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=204, body=None, req_method=Some(GET)
Jun 19 20:05:08.093 TRACE encode_headers: hyper::proto::h1::role: server body forced to 0; method=Some(GET), status=204
Jun 19 20:05:08.093 DEBUG hyper::proto::h1::io: flushed 64 bytes
Jun 19 20:05:08.093 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:08.093 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:08.093 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:08.243 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:08.243 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 238])
Jun 19 20:05:08.243 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(165)
Jun 19 20:05:08.244 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:08.244 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:08.244 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:08.244 DEBUG request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:08.244  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:08.244 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "health-check"
Jun 19 20:05:08.245 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:08.245 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:08.245 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:08.245  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=204
Jun 19 20:05:08.245 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=204, body=None, req_method=Some(GET)
Jun 19 20:05:08.245 TRACE encode_headers: hyper::proto::h1::role: server body forced to 0; method=Some(GET), status=204
Jun 19 20:05:08.246 DEBUG hyper::proto::h1::io: flushed 64 bytes
Jun 19 20:05:08.246 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:08.246 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:08.246 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:08.389 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:08.390 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 238])
Jun 19 20:05:08.390 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(165)
Jun 19 20:05:08.390 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:08.391 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:08.391 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:08.391 DEBUG request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:08.391  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:08.391 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "health-check"
Jun 19 20:05:08.392 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:08.392 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:08.392 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:08.392  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=204
Jun 19 20:05:08.392 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=204, body=None, req_method=Some(GET)
Jun 19 20:05:08.392 TRACE encode_headers: hyper::proto::h1::role: server body forced to 0; method=Some(GET), status=204
Jun 19 20:05:08.393 DEBUG hyper::proto::h1::io: flushed 64 bytes
Jun 19 20:05:08.393 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:08.393 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:08.393 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:08.611 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:08.611 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 238])
Jun 19 20:05:08.611 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(165)
Jun 19 20:05:08.611 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:08.612 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:08.612 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:08.612 DEBUG request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:08.612  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:08.612 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "health-check"
Jun 19 20:05:08.613 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:08.613 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:08.613 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:08.613  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=204
Jun 19 20:05:08.613 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=204, body=None, req_method=Some(GET)
Jun 19 20:05:08.613 TRACE encode_headers: hyper::proto::h1::role: server body forced to 0; method=Some(GET), status=204
Jun 19 20:05:08.614 DEBUG hyper::proto::h1::io: flushed 64 bytes
Jun 19 20:05:08.614 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:08.614 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:08.614 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:08.719 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:08.719 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 238])
Jun 19 20:05:08.720 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(165)
Jun 19 20:05:08.720 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:08.720 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:08.720 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:08.720 DEBUG request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:08.720  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:08.721 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "health-check"
Jun 19 20:05:08.721 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:08.721 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:08.721 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:08.721  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=204
Jun 19 20:05:08.721 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=204, body=None, req_method=Some(GET)
Jun 19 20:05:08.722 TRACE encode_headers: hyper::proto::h1::role: server body forced to 0; method=Some(GET), status=204
Jun 19 20:05:08.722 DEBUG hyper::proto::h1::io: flushed 64 bytes
Jun 19 20:05:08.722 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:08.722 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:08.722 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:08.930 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:08.931 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 238])
Jun 19 20:05:08.931 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(165)
Jun 19 20:05:08.931 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:08.931 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:08.931 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:08.931 DEBUG request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:08.932  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:08.932 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "health-check"
Jun 19 20:05:08.932 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:08.932 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:08.932 TRACE request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:08.932  INFO request{method=GET path=/health-check version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=204
Jun 19 20:05:08.932 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=204, body=None, req_method=Some(GET)
Jun 19 20:05:08.933 TRACE encode_headers: hyper::proto::h1::role: server body forced to 0; method=Some(GET), status=204
Jun 19 20:05:08.933 DEBUG hyper::proto::h1::io: flushed 64 bytes
Jun 19 20:05:08.933 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:08.933 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:08.933 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:15.872 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:15.872 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:15.872 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:15.872 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:15.873 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:15.873 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:15.873 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:15.873  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:15.873 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:15.874 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:15.874 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:15.874 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:15.874 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:15.874 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:15.875  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 577.429µs  
Jun 19 20:05:15.875 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:15.876 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:15.876 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:15.880  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 1.730ms

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:15.880  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:15.880  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:15.880 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:15.881 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:15.881 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:15.881 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:15.881 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:15.881  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 373.272µs  
Jun 19 20:05:16.836 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:16.836 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:16.836 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:16.836 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:16.837 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:16.837 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:16.837 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:16.837  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:16.837 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:16.837 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:16.837 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:16.838 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:16.838 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:16.838 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:16.839  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 478.526µs  
Jun 19 20:05:16.839 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:16.839 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:16.841  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 534.007µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:16.842  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:16.842  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:16.842 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:16.842 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:16.842 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:16.843 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:16.843 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:16.843  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 313.697µs  
Jun 19 20:05:17.113 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:17.113 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:17.114 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:17.114 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:17.115 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:17.116 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:17.117 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:17.118  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:17.118 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:17.118 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:17.119 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:17.119 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:17.120 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:17.120 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:17.121  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 828.505µs  
Jun 19 20:05:17.122 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:17.122 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:17.126  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 1.158ms

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:17.127  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:17.127  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:17.128 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:17.128 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:17.128 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:17.128 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:17.128 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:17.129  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 357.385µs  
Jun 19 20:05:17.246 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:17.246 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:17.246 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:17.246 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:17.246 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:17.247 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:17.247 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:17.247  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:17.247 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:17.247 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:17.247 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:17.248 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:17.248 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:17.248 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:17.249  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 790.586µs  
Jun 19 20:05:17.250 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:17.253  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 989.420µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:17.253  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:17.253  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:17.253 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:17.254 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:17.254 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:17.254 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:17.254 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:17.254  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 333.922µs  
Jun 19 20:05:17.606 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:17.606 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:17.606 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:17.606 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:17.607 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:17.607 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:17.607 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:17.607  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:17.608 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:17.608 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:17.608 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:17.608 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:17.608 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:17.609 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:17.609  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 408.278µs  
Jun 19 20:05:17.609 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:17.610 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:17.612  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 629.645µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:17.612  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:17.613  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:17.613 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:17.613 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:17.614 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:17.614 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:17.614 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:17.614  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 457.071µs  
Jun 19 20:05:17.857 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:17.857 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:17.858 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:17.858 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:17.858 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:17.859 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:17.859 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:17.859  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:17.859 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:17.860 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:17.860 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:17.860 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:17.861 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:17.861 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:17.862  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 629.897µs  
Jun 19 20:05:17.862 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:17.863 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:17.867  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 930.396µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:17.868  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:17.868  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:17.869 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:17.869 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:17.869 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:17.870 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:17.870 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:17.870  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 508.129µs  
Jun 19 20:05:17.967 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:17.967 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:17.968 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:17.968 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:17.968 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:17.968 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:17.968 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:17.969  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:17.969 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:17.969 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:17.969 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:17.969 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:17.969 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:17.970 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:17.970  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 375.121µs  
Jun 19 20:05:17.970 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:17.972  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 333.102µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:17.973  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:17.973  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:17.973 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:17.973 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:17.974 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:17.974 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:17.974 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:17.974  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 228.900µs  
Jun 19 20:05:18.147 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:18.148 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:18.149 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:18.149 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:18.150 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:18.150 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:18.150 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:18.150  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:18.150 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:18.151 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:18.151 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:18.151 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:18.151 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:18.152 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:18.152  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 467.020µs  
Jun 19 20:05:18.152 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:18.153 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:18.155  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 501.251µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:18.155  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:18.155  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:18.155 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:18.156 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:18.156 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:18.156 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:18.156 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:18.156  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 254.496µs  
Jun 19 20:05:18.320 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:18.321 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:18.321 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:18.321 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:18.322 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:18.322 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:18.322 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:18.323  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:18.323 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:18.323 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:18.324 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:18.324 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:18.324 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:18.325 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:18.325  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 591.898µs  
Jun 19 20:05:18.326 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:18.330  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 599.755µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:18.331  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:18.331  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:18.332 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:18.332 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:18.333 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:18.333 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:18.333 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:18.334  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 520.860µs  
Jun 19 20:05:18.429 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:18.429 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:18.429 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:18.430 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:18.430 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:18.430 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:18.430 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:18.431  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:18.431 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:18.431 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:18.431 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:18.431 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:18.431 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:18.432 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:18.432  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 557.173µs  
Jun 19 20:05:18.433 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:18.435  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 350.892µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:18.435  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:18.435  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:18.436 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:18.436 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:18.436 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:18.436 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:18.436 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:18.436  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 297.245µs  
Jun 19 20:05:18.643 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:18.643 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:18.644 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:18.644 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:18.644 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:18.644 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:18.644 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:18.645  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:18.645 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:18.645 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:18.645 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:18.645 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:18.645 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:18.646 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:18.646  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 575.450µs  
Jun 19 20:05:18.647 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:18.651  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 1.159ms

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:18.651  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:18.651  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:18.651 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:18.652 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:18.652 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:18.652 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:18.652 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:18.653  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 443.019µs  
Jun 19 20:05:18.770 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:18.770 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:18.770 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:18.770 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:18.770 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:18.771 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:18.771 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:18.771  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:18.771 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:18.771 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:18.771 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:18.771 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:18.772 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:18.772 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:18.772  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 365.279µs  
Jun 19 20:05:18.773 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:18.775  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 314.440µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:18.775  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:18.775  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:18.775 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:18.776 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:18.776 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:18.776 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:18.776 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:18.776  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 230.971µs  
Jun 19 20:05:18.973 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:18.973 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:18.973 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:18.974 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:18.974 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:18.974 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:18.974 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:18.975  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:18.975 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:18.975 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:18.975 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:18.975 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:18.975 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:18.976 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:18.976  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 349.184µs  
Jun 19 20:05:18.976 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:18.979  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 362.742µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:18.979  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:18.979  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:18.980 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:18.980 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:18.980 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:18.981 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:18.981 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:18.981  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 551.914µs  
Jun 19 20:05:19.092 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:19.093 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:19.093 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:19.093 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:19.093 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:19.093 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:19.094 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:19.094  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:19.094 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:19.094 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:19.094 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:19.094 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:19.094 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:19.095 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:19.095  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 413.050µs  
Jun 19 20:05:19.096 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:19.098  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 667.624µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:19.099  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:19.099  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:19.099 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:19.099 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:19.100 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:19.100 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:19.100 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:19.100  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 324.906µs  
Jun 19 20:05:19.287 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:19.287 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:19.287 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:19.288 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:19.288 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:19.288 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:19.288 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:19.289  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:19.289 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:19.289 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:19.289 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:19.289 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:19.289 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:19.290 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:19.290  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 373.521µs  
Jun 19 20:05:19.290 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:19.291 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:19.293  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 583.726µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:19.293  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:19.293  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:19.293 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:19.294 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:19.294 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:19.294 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:19.294 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:19.294  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 218.419µs  
Jun 19 20:05:19.660 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:19.660 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:19.661 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:19.661 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:19.661 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:19.661 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:19.661 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:19.662  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:19.662 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:19.662 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:19.662 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:19.662 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:19.662 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:19.663 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:19.663  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 497.987µs  
Jun 19 20:05:19.664 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:19.667  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 815.494µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:19.667  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:19.667  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:19.668 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:19.668 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:19.668 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:19.668 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:19.668 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:19.669  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 347.871µs  
Jun 19 20:05:19.805 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:19.806 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:19.806 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:19.806 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:19.806 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:19.806 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:19.807 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:19.807  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:19.807 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:19.807 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:19.807 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:19.807 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:19.807 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:19.808 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:19.808  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 360.077µs  
Jun 19 20:05:19.808 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:19.809 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:19.811  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 524.403µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:19.811  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:19.811  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:19.811 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:19.812 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:19.812 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:19.812 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:19.812 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:19.813  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 534.295µs  
Jun 19 20:05:20.001 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:20.001 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:20.001 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:20.001 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:20.002 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:20.002 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:20.002 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:20.002  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:20.002 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:20.003 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:20.003 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:20.003 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:20.003 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:20.003 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:20.004  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 512.664µs  
Jun 19 20:05:20.004 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:20.006  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 327.618µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:20.007  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:20.007  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:20.007 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:20.007 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:20.007 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:20.008 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:20.008 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:20.008  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 296.393µs  
Jun 19 20:05:20.160 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:20.160 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:20.160 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:20.161 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:20.161 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:20.161 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:20.161 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:20.161  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:20.162 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:20.162 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:20.162 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:20.162 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:20.162 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:20.163 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:20.163  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 566.851µs  
Jun 19 20:05:20.164 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:20.166  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 649.464µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:20.167  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:20.167  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:20.167 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:20.167 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:20.167 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:20.168 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:20.168 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:20.168  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 359.642µs  
Jun 19 20:05:20.325 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:20.325 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:20.325 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:20.326 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:20.326 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:20.327 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:20.327 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:20.327  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:20.328 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:20.328 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:20.328 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:20.328 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:20.329 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:20.330 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:20.331  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 1.244ms  
Jun 19 20:05:20.332 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:20.336  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 761.765µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:20.336  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:20.337  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:20.337 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:20.338 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:20.338 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:20.338 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:20.338 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:20.339  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 531.737µs  
Jun 19 20:05:20.469 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:20.469 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:20.470 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:20.470 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:20.471 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:20.471 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:20.471 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:20.471  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:20.472 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:20.472 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:20.472 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:20.472 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:20.473 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:20.473 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:20.474  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 619.585µs  
Jun 19 20:05:20.474 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:20.479  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 577.484µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:20.479  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:20.480  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:20.481 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:20.481 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:20.481 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:20.482 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:20.482 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:20.482  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 615.801µs  
Jun 19 20:05:20.608 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:20.608 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:20.608 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:20.608 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:20.609 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:20.609 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:20.609 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:20.609  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:20.609 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:20.610 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:20.610 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:20.610 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:20.610 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:20.611 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:20.611  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 466.631µs  
Jun 19 20:05:20.612 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:20.614  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 908.505µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:20.615  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:20.615  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:20.615 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:20.615 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:20.616 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:20.616 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:20.616 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:20.616  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 356.449µs  
Jun 19 20:05:20.817 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:20.817 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 229])
Jun 19 20:05:20.818 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(156)
Jun 19 20:05:20.818 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [55, 51] }]
Jun 19 20:05:20.818 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:20.818 DEBUG hyper::proto::h1::conn: incoming body is content-length (73 bytes)
Jun 19 20:05:20.818 DEBUG request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:20.819  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:20.819 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "avc"
Jun 19 20:05:20.819 TRACE hyper::proto::h1::decode: decode; state=Length(73)
Jun 19 20:05:20.819 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:20.819 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:20.819 TRACE request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "avc"
Jun 19 20:05:20.820 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:20.820  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 402.923µs  
Jun 19 20:05:20.820 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:20.823  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 0, elapsed: 392.172µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:20.823  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="avc"}: shortest_url::http: The requested url was not found
Jun 19 20:05:20.823  INFO request{method=GET path=/avc version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=404
Jun 19 20:05:20.823 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=404, body=None, req_method=Some(GET)
Jun 19 20:05:20.824 DEBUG hyper::proto::h1::io: flushed 82 bytes
Jun 19 20:05:20.824 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:20.824 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:20.824 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:20.824  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 220.414µs  
Jun 19 20:05:38.486 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:38.487 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 167])
Jun 19 20:05:38.487 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(137)
Jun 19 20:05:38.487 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 106, 115, 111, 110] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [51, 48] }]
Jun 19 20:05:38.488 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:38.488 DEBUG hyper::proto::h1::conn: incoming body is content-length (30 bytes)
Jun 19 20:05:38.488 DEBUG request{method=POST path=/ version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:38.488  INFO request{method=POST path=/ version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:38.488 TRACE request{method=POST path=/ version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: ""
Jun 19 20:05:38.488 TRACE hyper::proto::h1::decode: decode; state=Length(30)
Jun 19 20:05:38.489 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:38.489 TRACE request{method=POST path=/ version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: POST
Jun 19 20:05:38.489 TRACE request{method=POST path=/ version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::POST?: POST
Jun 19 20:05:38.489 TRACE request{method=POST path=/ version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::body: is_content_type application/json? "application/json"
Jun 19 20:05:38.490 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:38.490  INFO request{method=POST path=/ version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle adding a url to the database{url="https://www.greatdogprog.org"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 369.711µs  
Jun 19 20:05:38.490 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:38.491 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:38.491 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:38.505  INFO request{method=POST path=/ version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle adding a url to the database{url="https://www.greatdogprog.org"}: sqlx::query: INSERT INTO public.urls (url) …; rows: 0, elapsed: 9.105ms

INSERT INTO
  public.urls (url)
VALUES
  ($1) ON CONFLICT DO NOTHING;
  
Jun 19 20:05:38.506 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:38.506 TRACE request{method=POST path=/ version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle adding a url to the database{url="https://www.greatdogprog.org"}: mio::poll: registering event source with poller: token=Token(3), interests=READABLE | WRITABLE    
Jun 19 20:05:38.507  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 646.392µs  
Jun 19 20:05:38.507 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:38.508 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:38.509 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:38.510 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:38.513 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:38.515 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:38.519  INFO request{method=POST path=/ version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle adding a url to the database{url="https://www.greatdogprog.org"}: sqlx::query: SELECT u.key FROM public.urls …; rows: 1, elapsed: 2.780ms

SELECT
  u.key
FROM
  public.urls AS u
WHERE
  u.url = $1;
  
Jun 19 20:05:38.520  INFO request{method=POST path=/ version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle adding a url to the database{url="https://www.greatdogprog.org"}: shortest_url::http: A url was created with the following slug: 1
Jun 19 20:05:38.520  INFO request{method=POST path=/ version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=201
Jun 19 20:05:38.521 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=201, body=Some(Known(3)), req_method=Some(POST)
Jun 19 20:05:38.521 TRACE hyper::proto::h1::io: buffer.queue self.len=112 buf.len=3
Jun 19 20:05:38.521 DEBUG hyper::proto::h1::io: flushed 115 bytes
Jun 19 20:05:38.522 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:38.522 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:38.522 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:38.523  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 534.897µs  
Jun 19 20:05:49.000 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:49.001 TRACE parse_headers: hyper::proto::h1::role: Request.parse([Header; 100], [u8; 167])
Jun 19 20:05:49.001 TRACE parse_headers: hyper::proto::h1::role: Request.parse Complete(137)
Jun 19 20:05:49.001 TRACE parse_headers: hyper::proto::h1::role: headers: [Header { name: "Host", value: [108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49] }, Header { name: "User-Agent", value: [105, 110, 115, 111, 109, 110, 105, 97, 47, 50, 48, 50, 49, 46, 51, 46, 48] }, Header { name: "Content-Type", value: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 106, 115, 111, 110] }, Header { name: "Accept", value: [42, 47, 42] }, Header { name: "Content-Length", value: [51, 48] }]
Jun 19 20:05:49.002 DEBUG hyper::proto::h1::io: parsed 5 headers
Jun 19 20:05:49.002 DEBUG hyper::proto::h1::conn: incoming body is content-length (30 bytes)
Jun 19 20:05:49.002 DEBUG request{method=GET path=/1 version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: received request
Jun 19 20:05:49.003  INFO request{method=GET path=/1 version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: processing request
Jun 19 20:05:49.003 TRACE request{method=GET path=/1 version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: "health-check"?: "1"
Jun 19 20:05:49.003 TRACE hyper::proto::h1::decode: decode; state=Length(30)
Jun 19 20:05:49.004 DEBUG hyper::proto::h1::conn: incoming body completed
Jun 19 20:05:49.004 TRACE request{method=GET path=/1 version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::method: method::GET?: GET
Jun 19 20:05:49.004 TRACE request{method=GET path=/1 version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::path: param?: "1"
Jun 19 20:05:49.005 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:49.005  INFO request{method=GET path=/1 version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="1"}: sqlx::query: /* SQLx ping */; rows: 0, elapsed: 471.472µs  
Jun 19 20:05:49.005 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:49.005 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: KeepAlive, writing: Init, keep_alive: Busy }
Jun 19 20:05:49.008  INFO request{method=GET path=/1 version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="1"}: sqlx::query: SELECT u.url FROM public.urls …; rows: 1, elapsed: 586.076µs

SELECT
  u.url
FROM
  public.urls AS u
WHERE
  u.key = $1;
  
Jun 19 20:05:49.008  INFO request{method=GET path=/1 version=HTTP/1.1 remote.addr=127.0.0.1:52032}:Handle getting a url by a slug{slug="1"}: shortest_url::http: The url was found: https://www.greatdogprog.org/
Jun 19 20:05:49.009  INFO request{method=GET path=/1 version=HTTP/1.1 remote.addr=127.0.0.1:52032}: warp::filters::trace: finished processing with success status=301
Jun 19 20:05:49.009 TRACE encode_headers: hyper::proto::h1::role: Server::encode status=301, body=None, req_method=Some(GET)
Jun 19 20:05:49.009 DEBUG hyper::proto::h1::io: flushed 131 bytes
Jun 19 20:05:49.009 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:49.009 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:05:49.010 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Init, writing: Init, keep_alive: Idle }
Jun 19 20:05:49.010  INFO sqlx::query: /* SQLx ping */; rows: 0, elapsed: 411.285µs  
Jun 19 20:07:11.399 TRACE hyper::proto::h1::conn: Conn::read_head
Jun 19 20:07:11.399 TRACE hyper::proto::h1::io: parse eof
Jun 19 20:07:11.399 TRACE hyper::proto::h1::conn: State::close_read()
Jun 19 20:07:11.399 DEBUG hyper::proto::h1::conn: read eof
Jun 19 20:07:11.400 TRACE hyper::proto::h1::conn: State::close_write()
Jun 19 20:07:11.400 TRACE hyper::proto::h1::conn: State::close_read()
Jun 19 20:07:11.400 TRACE hyper::proto::h1::conn: State::close_write()
Jun 19 20:07:11.400 TRACE hyper::proto::h1::conn: flushed({role=server}): State { reading: Closed, writing: Closed, keep_alive: Disabled }
Jun 19 20:07:11.400 TRACE hyper::proto::h1::conn: shut down IO complete
Jun 19 20:07:11.400 TRACE mio::poll: deregistering event source from poller    
Jun 20 11:51:24.939 TRACE mio::poll: registering event source with poller: token=Token(0), interests=READABLE | WRITABLE    
Jun 20 11:51:24.941 TRACE mio::poll: registering event source with poller: token=Token(1), interests=READABLE | WRITABLE    
Jun 20 11:51:24.942  INFO shortest_url: Now listening on: 127.0.0.1:8081
